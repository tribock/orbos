kind: orbiter.caos.ch/Orb
version: v0
spec:
  verbose: false
clusters:
  k8s:
    kind: orbiter.caos.ch/KubernetesCluster
    version: v0
    spec:
      controlplane:
        updatesdisabled: false
        provider: gce
        nodes: 1
        pool: management
        taints:
          - key: node-role.kubernetes.io/master
            effect: NoSchedule
      networking:
        dnsdomain: cluster.dev
        network: calico
        servicecidr: 100.126.4.0/22
        podcidr: 100.127.224.0/20
      verbose: false
      versions:
        kubernetes: v1.18.0
        orbiter: v0.21.0
      workers:
        - updatesdisabled: false
          provider: gce
          nodes: 1
          pool: application
        - updatesdisabled: false
          provider: gce
          nodes: 1
          pool: storage
providers:
  gce:
    kind: orbiter.caos.ch/GCEProvider
    version: v0
    spec:
      verbose: false
      region: europe-west6
      zone: europe-west6-b
      pools:
        application:
          osimage: projects/centos-cloud/global/images/centos-7-v20200429
          mincpucores: 2
          minmemorygb: 7
          storagegb: 20
          preemptible: false
          localssds: 0
        management:
          osimage: projects/centos-cloud/global/images/centos-7-v20200429
          mincpucores: 2
          minmemorygb: 7
          storagegb: 20
          preemptible: false
          localssds: 0
        storage:
          osimage: projects/centos-cloud/global/images/centos-7-v20200429
          mincpucores: 2
          minmemorygb: 7
          storagegb: 20
          preemptible: false
          localssds: 3
    loadbalancing:
      kind: orbiter.caos.ch/DynamicLoadBalancer
      version: v2
      spec:
        management:
          - transport:
              - name: kubeapi
                frontendport: 6443
                backendport: 6666
                backendpools:
                  - management
                whitelist:
                  - 0.0.0.0/0
                healthchecks:
                  protocol: https
                  path: /healthz
                  code: 200
        application:
          - transport:
              - name: httpsingress
                frontendport: 443
                backendport: 30443
                backendpools:
                  - application
                whitelist:
                  - 0.0.0.0/0
                healthchecks:
                  protocol: https
                  path: /ambassador/v0/check_ready
                  code: 200
              - name: httpingress
                frontendport: 80
                backendport: 30080
                backendpools:
                  - application
                whitelist:
                  - 0.0.0.0/0
                healthchecks:
                  protocol: http
                  path: /ambassador/v0/check_ready
                  code: 200